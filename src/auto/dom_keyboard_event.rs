// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use DOMDOMWindow;
use DOMEvent;
use DOMObject;
use DOMUIEvent;
use ffi;
use glib::translate::*;
use libc;

glib_wrapper! {
    pub struct DOMKeyboardEvent(Object<ffi::WebKitDOMKeyboardEvent>): DOMUIEvent, DOMEvent, DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_keyboard_event_get_type(),
    }
}

impl DOMKeyboardEvent {
    pub fn get_alt_graph_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_alt_graph_key(self.to_glib_none().0))
        }
    }

    pub fn get_alt_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_alt_key(self.to_glib_none().0))
        }
    }

    pub fn get_ctrl_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_ctrl_key(self.to_glib_none().0))
        }
    }

    pub fn get_key_identifier(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_keyboard_event_get_key_identifier(self.to_glib_none().0))
        }
    }

    pub fn get_key_location(&self) -> libc::c_ulong {
        unsafe {
            ffi::webkit_dom_keyboard_event_get_key_location(self.to_glib_none().0)
        }
    }

    pub fn get_meta_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_meta_key(self.to_glib_none().0))
        }
    }

    pub fn get_modifier_state(&self, keyIdentifierArg: &str) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_modifier_state(self.to_glib_none().0, keyIdentifierArg.to_glib_none().0))
        }
    }

    pub fn get_shift_key(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_keyboard_event_get_shift_key(self.to_glib_none().0))
        }
    }

    pub fn init_keyboard_event(&self, type_: &str, canBubble: bool, cancelable: bool, view: &DOMDOMWindow, keyIdentifier: &str, location: libc::c_ulong, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool, altGraphKey: bool) {
        unsafe {
            ffi::webkit_dom_keyboard_event_init_keyboard_event(self.to_glib_none().0, type_.to_glib_none().0, canBubble.to_glib(), cancelable.to_glib(), view.to_glib_none().0, keyIdentifier.to_glib_none().0, location, ctrlKey.to_glib(), altKey.to_glib(), shiftKey.to_glib(), metaKey.to_glib(), altGraphKey.to_glib());
        }
    }
}
