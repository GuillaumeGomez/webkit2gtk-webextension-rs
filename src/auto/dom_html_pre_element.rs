// This file was generated by gir (3c73dd9) from gir-files (???)
// DO NOT EDIT

use DOMElement;
use DOMEventTarget;
use DOMHTMLElement;
use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;
use libc;

glib_wrapper! {
    pub struct DOMHTMLPreElement(Object<ffi::WebKitDOMHTMLPreElement>): DOMHTMLElement, DOMElement, DOMNode, DOMObject, DOMEventTarget;

    match fn {
        get_type => || ffi::webkit_dom_html_pre_element_get_type(),
    }
}

pub trait DOMHTMLPreElementExt {
    fn get_width(&self) -> libc::c_long;

    fn get_wrap(&self) -> bool;

    fn set_width(&self, value: libc::c_long);

    fn set_wrap(&self, value: bool);
}

impl<O: IsA<DOMHTMLPreElement>> DOMHTMLPreElementExt for O {
    fn get_width(&self) -> libc::c_long {
        unsafe {
            ffi::webkit_dom_html_pre_element_get_width(self.to_glib_none().0)
        }
    }

    fn get_wrap(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_html_pre_element_get_wrap(self.to_glib_none().0))
        }
    }

    fn set_width(&self, value: libc::c_long) {
        unsafe {
            ffi::webkit_dom_html_pre_element_set_width(self.to_glib_none().0, value);
        }
    }

    fn set_wrap(&self, value: bool) {
        unsafe {
            ffi::webkit_dom_html_pre_element_set_wrap(self.to_glib_none().0, value.to_glib());
        }
    }
}
