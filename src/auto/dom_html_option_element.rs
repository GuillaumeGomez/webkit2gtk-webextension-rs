// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use DOMElement;
use DOMEventTarget;
use DOMHTMLElement;
use DOMHTMLFormElement;
use DOMNode;
use DOMObject;
use ffi;
use glib::translate::*;
use libc;

glib_wrapper! {
    pub struct DOMHTMLOptionElement(Object<ffi::WebKitDOMHTMLOptionElement>): DOMHTMLElement, DOMElement, DOMNode, DOMObject, DOMEventTarget;

    match fn {
        get_type => || ffi::webkit_dom_html_option_element_get_type(),
    }
}

impl DOMHTMLOptionElement {
    pub fn get_default_selected(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_html_option_element_get_default_selected(self.to_glib_none().0))
        }
    }

    pub fn get_disabled(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_html_option_element_get_disabled(self.to_glib_none().0))
        }
    }

    pub fn get_form(&self) -> Option<DOMHTMLFormElement> {
        unsafe {
            from_glib_none(ffi::webkit_dom_html_option_element_get_form(self.to_glib_none().0))
        }
    }

    pub fn get_index(&self) -> libc::c_long {
        unsafe {
            ffi::webkit_dom_html_option_element_get_index(self.to_glib_none().0)
        }
    }

    pub fn get_label(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_option_element_get_label(self.to_glib_none().0))
        }
    }

    pub fn get_selected(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_dom_html_option_element_get_selected(self.to_glib_none().0))
        }
    }

    pub fn get_text(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_option_element_get_text(self.to_glib_none().0))
        }
    }

    pub fn get_value(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_option_element_get_value(self.to_glib_none().0))
        }
    }

    pub fn set_default_selected(&self, value: bool) {
        unsafe {
            ffi::webkit_dom_html_option_element_set_default_selected(self.to_glib_none().0, value.to_glib());
        }
    }

    pub fn set_disabled(&self, value: bool) {
        unsafe {
            ffi::webkit_dom_html_option_element_set_disabled(self.to_glib_none().0, value.to_glib());
        }
    }

    pub fn set_label(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_option_element_set_label(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_selected(&self, value: bool) {
        unsafe {
            ffi::webkit_dom_html_option_element_set_selected(self.to_glib_none().0, value.to_glib());
        }
    }

    pub fn set_value(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_option_element_set_value(self.to_glib_none().0, value.to_glib_none().0);
        }
    }
}
