// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use DOMDOMWindow;
use DOMEvent;
use DOMMouseEvent;
use DOMObject;
use DOMUIEvent;
use ffi;
use glib::translate::*;
use libc;

glib_wrapper! {
    pub struct DOMWheelEvent(Object<ffi::WebKitDOMWheelEvent>): DOMMouseEvent, DOMUIEvent, DOMEvent, DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_wheel_event_get_type(),
    }
}

impl DOMWheelEvent {
    pub fn get_wheel_delta(&self) -> libc::c_long {
        unsafe {
            ffi::webkit_dom_wheel_event_get_wheel_delta(self.to_glib_none().0)
        }
    }

    pub fn get_wheel_delta_x(&self) -> libc::c_long {
        unsafe {
            ffi::webkit_dom_wheel_event_get_wheel_delta_x(self.to_glib_none().0)
        }
    }

    pub fn get_wheel_delta_y(&self) -> libc::c_long {
        unsafe {
            ffi::webkit_dom_wheel_event_get_wheel_delta_y(self.to_glib_none().0)
        }
    }

    pub fn init_wheel_event(&self, wheelDeltaX: libc::c_long, wheelDeltaY: libc::c_long, view: &DOMDOMWindow, screenX: libc::c_long, screenY: libc::c_long, clientX: libc::c_long, clientY: libc::c_long, ctrlKey: bool, altKey: bool, shiftKey: bool, metaKey: bool) {
        unsafe {
            ffi::webkit_dom_wheel_event_init_wheel_event(self.to_glib_none().0, wheelDeltaX, wheelDeltaY, view.to_glib_none().0, screenX, screenY, clientX, clientY, ctrlKey.to_glib(), altKey.to_glib(), shiftKey.to_glib(), metaKey.to_glib());
        }
    }
}
