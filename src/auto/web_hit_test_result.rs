// This file was generated by gir (3c73dd9) from gir-files (???)
// DO NOT EDIT

use DOMNode;
use HitTestResult;
use ffi;
use glib;
use glib::Value;
use glib::object::IsA;
use glib::translate::*;
use gobject_ffi;

glib_wrapper! {
    pub struct WebHitTestResult(Object<ffi::WebKitWebHitTestResult>): HitTestResult;

    match fn {
        get_type => || ffi::webkit_web_hit_test_result_get_type(),
    }
}

pub trait WebHitTestResultExt {
    #[cfg(feature = "v2_8")]
    fn get_node(&self) -> Option<DOMNode>;

    fn get_property_node(&self) -> Option<DOMNode>;
}

impl<O: IsA<WebHitTestResult> + IsA<glib::object::Object>> WebHitTestResultExt for O {
    #[cfg(feature = "v2_8")]
    fn get_node(&self) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_web_hit_test_result_get_node(self.to_glib_none().0))
        }
    }

    fn get_property_node(&self) -> Option<DOMNode> {
        let mut value = Value::from(None::<&DOMNode>);
        unsafe {
            gobject_ffi::g_object_get_property(self.to_glib_none().0, "node".to_glib_none().0, value.to_glib_none_mut().0);
        }
        value.get()
    }
}
