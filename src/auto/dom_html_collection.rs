// This file was generated by gir (0f7cd61) from gir-files (0bcaef9)
// DO NOT EDIT

use DOMNode;
use DOMObject;
use ffi;
use glib::object::IsA;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use libc;
use std::mem;
use std::ptr;

glib_wrapper! {
    pub struct DOMHTMLCollection(Object<ffi::WebKitDOMHTMLCollection>): DOMObject;

    match fn {
        get_type => || ffi::webkit_dom_html_collection_get_type(),
    }
}

pub trait DOMHTMLCollectionExt {
    fn get_length(&self) -> libc::c_ulong;

    fn item(&self, index: libc::c_ulong) -> Option<DOMNode>;

    fn named_item(&self, name: &str) -> Option<DOMNode>;
}

impl<O: IsA<DOMHTMLCollection>> DOMHTMLCollectionExt for O {
    fn get_length(&self) -> libc::c_ulong {
        unsafe {
            ffi::webkit_dom_html_collection_get_length(self.to_glib_none().0)
        }
    }

    fn item(&self, index: libc::c_ulong) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_html_collection_item(self.to_glib_none().0, index))
        }
    }

    fn named_item(&self, name: &str) -> Option<DOMNode> {
        unsafe {
            from_glib_none(ffi::webkit_dom_html_collection_named_item(self.to_glib_none().0, name.to_glib_none().0))
        }
    }
}
