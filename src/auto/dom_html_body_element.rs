// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use DOMElement;
use DOMEventTarget;
use DOMHTMLElement;
use DOMNode;
use DOMObject;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct DOMHTMLBodyElement(Object<ffi::WebKitDOMHTMLBodyElement>): DOMHTMLElement, DOMElement, DOMNode, DOMObject, DOMEventTarget;

    match fn {
        get_type => || ffi::webkit_dom_html_body_element_get_type(),
    }
}

impl DOMHTMLBodyElement {
    pub fn get_a_link(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_a_link(self.to_glib_none().0))
        }
    }

    pub fn get_background(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_background(self.to_glib_none().0))
        }
    }

    pub fn get_bg_color(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_bg_color(self.to_glib_none().0))
        }
    }

    pub fn get_link(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_link(self.to_glib_none().0))
        }
    }

    pub fn get_text(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_text(self.to_glib_none().0))
        }
    }

    pub fn get_v_link(&self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_dom_html_body_element_get_v_link(self.to_glib_none().0))
        }
    }

    pub fn set_a_link(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_a_link(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_background(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_background(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_bg_color(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_bg_color(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_link(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_link(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_text(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_text(self.to_glib_none().0, value.to_glib_none().0);
        }
    }

    pub fn set_v_link(&self, value: &str) {
        unsafe {
            ffi::webkit_dom_html_body_element_set_v_link(self.to_glib_none().0, value.to_glib_none().0);
        }
    }
}
