// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::object::IsA;
use glib::translate::*;
use libc;
use std::fmt;
use webkit2_webextension_sys;
use DOMNode;

glib_wrapper! {
    pub struct DOMNodeFilter(Interface<webkit2_webextension_sys::WebKitDOMNodeFilter>);

    match fn {
        get_type => || webkit2_webextension_sys::webkit_dom_node_filter_get_type(),
    }
}

pub const NONE_DOM_NODE_FILTER: Option<&DOMNodeFilter> = None;

pub trait DOMNodeFilterExt: 'static {
    #[cfg_attr(feature = "v2_22", deprecated)]
    fn accept_node<P: IsA<DOMNode>>(&self, node: &P) -> libc::c_short;
}

impl<O: IsA<DOMNodeFilter>> DOMNodeFilterExt for O {
    fn accept_node<P: IsA<DOMNode>>(&self, node: &P) -> libc::c_short {
        unsafe {
            webkit2_webextension_sys::webkit_dom_node_filter_accept_node(
                self.as_ref().to_glib_none().0,
                node.as_ref().to_glib_none().0,
            )
        }
    }
}

impl fmt::Display for DOMNodeFilter {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "DOMNodeFilter")
    }
}
